name: Automated tests

on:
  workflow_dispatch:
  schedule:
    - cron: '0 13,18,23 * * *'

jobs:
  test:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: gradle

      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Set up Gradle
        uses: gradle/gradle-build-action@v3
        with:
          gradle-version: '7.5'

      - name: Set up Chrome
        uses: browser-actions/setup-chrome@v1

      - name: Set up ChromeDriver
        uses: nanasess/setup-chromedriver@v2

      - name: Set Chrome env variables
        run: |
          echo "CHROME_BIN=$env:CHROME_BIN" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "CHROMEWEBDRIVER=$env:CHROMEWEBDRIVER" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Build with Gradle
        run: ./gradlew build

      - name: Run tests
        run: ./gradlew testFuelSuite

      - name: Restore previous price file
        id: restore_cache
        uses: actions/cache@v3
        with:
          path: previousPrice.txt
          key: price-cache-${{ runner.os }}-${{ github.ref_name }}
          restore-keys: |
            price-cache-${{ runner.os }}-${{ github.ref_name }}-

      - name: Ensure previous price file exists
        shell: pwsh
        run: |
          if (-not (Test-Path previousPrice.txt)) {
            "No previous price available" | Set-Content previousPrice.txt
          }

      - name: Debug previous price file content
        run: cat previousPrice.txt

      - name: Read current data from file
        id: read_current_data
        shell: pwsh
        run: |
          $justPriceData = (Get-Content justPrice.txt -Raw).Trim() -replace "`r?`n", " "
          "justPriceData=$justPriceData" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding utf8

      - name: Read previous data from file
        id: read_previous_data
        shell: pwsh
        run: |
          $previousPriceData = (Get-Content previousPrice.txt -Raw).Trim() -replace "`r?`n", " "
          "previousPriceData=$previousPriceData" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding utf8

      - name: Debug current price file content
        run: cat justPrice.txt

      - name: Print price data
        run: |
          echo "Current Price Data: ${{ env.justPriceData }}"
          echo "Previous Price Data: ${{ env.previousPriceData }}"

      - name: Compare prices and set email flag
        id: compare_prices
        shell: pwsh
        run: |
          if ($env:previousPriceData -ne "No previous price available" -and $env:justPriceData -ne $env:previousPriceData) {
            "price_changed=true" | Out-File $env:GITHUB_ENV -Append
          } else {
            "price_changed=false" | Out-File $env:GITHUB_ENV -Append
          }

      - name: Send email report if price changed
        if: env.price_changed == 'true'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: Price changed to ${{ env.justPriceData }}
          body: |
            The price of unleaded gas has changed.
            Previous price: ${{ env.previousPriceData }}
            New price: ${{ env.justPriceData }}
          to: ${{ secrets.EMAIL_TO }}
          from: ${{ secrets.EMAIL_FROM }}

      - name: Save current price as previous price
        shell: pwsh
        run: Copy-Item justPrice.txt previousPrice.txt -Force

      - name: Update cache with new price
        uses: actions/cache@v3
        if: always()
        with:
          path: previousPrice.txt
          key: price-cache-${{ runner.os }}-${{ github.ref_name }}-${{ github.run_number }}
